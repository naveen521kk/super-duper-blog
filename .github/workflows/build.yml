name: Deploy

on:
  workflow_dispatch:
  # push:
  #   branches: ["main"]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
  
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: npm

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      - name: Install dependencies
        run: npm ci

      - name: Build with Gatsby
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: deploy-cf-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: deployment

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm

      - name: Install Wrangler
        working-directory: /tmp
        run: npm install wrangler -g

      - name: Deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: wrangler pages publish --project-name=super-super-blog public/
